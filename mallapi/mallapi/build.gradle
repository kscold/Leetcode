buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok' // 테스트 메서드에서 사용할 수 있도록 설정

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'

    testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 메서드에서 사용할 수 있도록 설정

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'net.coobird:thumbnailator:0.4.19' // 작은 크기 이미지인 썸네일을 만들기 위해 의존성 추가

    implementation 'org.springframework.boot:spring-boot-starter-security'

    // queryDSL 설정
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

    // gson 라이브러리 설정
    implementation 'com.google.code.gson:gson:2.10.1'



    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )
}

tasks.named('test') {
    useJUnitPlatform()
}

compileJava.dependsOn('clean') // 컴파일할 때 다 지우고 새로 만들어 주는 설정
